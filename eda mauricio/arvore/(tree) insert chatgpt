class Node:
    def __init__(self, v):
        self.value = v
        self.esq = None
        self.dir = None

class Tree:
    def __init__(self):
        self.root = None

    def insert(self, v):
        if self.root is None:
            self.root = Node(v)
        else:
            temp = self.root
            while True:
                if v <= temp.value:
                    if temp.esq is None:
                        temp.esq = Node(v)
                        break
                    else:
                        temp = temp.esq
                else:
                    if temp.dir is None:
                        temp.dir = Node(v)
                        break
                    else:
                        temp = temp.dir

    #def em_ordem(self):
    #    stack = []
    #    current = self.raiz
    #    while True:
    #        if current is not None:
    #            stack.append(current)
    #            current = current.esq
    #        elif stack:
    #            current = stack.pop()
    #            print(f'{current.valor} ')
    #            current = current.dir
    #        else:
    #            break


def main():
    tree = Tree()
    valores = [50, 17, 72, 12, 23, 54, 76, 9, 14, 19, 67]
    for x in valores:
        tree.insert(x)

    #t.em_ordem()

if __name__ == '__main__':
    main()